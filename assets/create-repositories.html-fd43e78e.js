import{_ as e,W as s,X as n,a0 as a}from"./framework-2ebc2ee8.js";const i={},t=a(`<blockquote><p>当着手于一个新的仓库时，你只需创建一次。要么在本地创建，然后推送到 GitHub；要么通过 clone 一个现有仓库。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在使用过 <code>git init</code> 命令后，使用以下命令将本地仓库与一个 GitHub 上的空仓库连接起来：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> remote <span class="token function">add</span> origin <span class="token punctuation">[</span>url<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将现有目录转换为一个 Git 仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Clone（下载）一个已存在于 GitHub 上的仓库，包括所有的文件、分支和提交(commits)</p>`,7),c=[t];function o(l,d){return s(),n("div",null,c)}const u=e(i,[["render",o],["__file","create-repositories.html.vue"]]);export{u as default};
